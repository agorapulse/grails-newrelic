buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "${newrelicApiVersion}.3"
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-plugin-publish'
apply plugin: 'org.grails.grails-gsp'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.grails.org/grails/core' }
}

dependencies {
    // Grails core
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.grails:grails-core'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.grails:grails-web-boot'
    compile 'org.grails:grails-logging'
    compile 'org.grails:grails-plugin-rest'
    compile 'org.grails:grails-plugin-databinding'
    compile 'org.grails:grails-plugin-services'
    compile 'org.grails:grails-datastore-rest-client'

    provided 'org.grails:grails-plugin-services'
    provided 'org.grails:grails-plugin-domain-class'

    console 'org.grails:grails-console'

    profile 'org.grails.profiles:web-plugin'

    testCompile 'org.grails:grails-gorm-testing-support'
    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails:grails-web-testing-support'

    // Latest NewRelic API lib
    compile "com.newrelic.agent.java:newrelic-api:$newrelicApiVersion"
}

apply from: './gradle/common.gradle'
apply from: './gradle/grailsPublish.gradle'
